{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savio\\\\Downloads\\\\final site\\\\bloodlinkFinal - Copy\\\\src\\\\routes\\\\Maps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  // Increase the width\n  height: '600px' // Increase the height\n};\nconst defaultCenter = {\n  lat: 22.805618,\n  lng: 86.203110\n};\nfunction Maps() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyD5SApASJpEqmz_XCbHmcGnY1m_GJdP_Fs\"\n  });\n  const [map, setMap] = React.useState(null);\n  useEffect(() => {\n    if (isLoaded) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          setMap(prevMap => {\n            if (prevMap) {\n              prevMap.panTo(userLocation);\n            }\n            return prevMap;\n          });\n        }, error => {\n          console.error('Error getting user location:', error);\n        });\n      }\n    }\n  }, [isLoaded]);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(defaultCenter);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback() {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: defaultCenter,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Maps, \"M7bEGNAYo/SV740oLextYZFnY10=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Maps;\nexport default _c2 = /*#__PURE__*/React.memo(Maps);\nvar _c, _c2;\n$RefreshReg$(_c, \"Maps\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","GoogleMap","useJsApiLoader","Fragment","_Fragment","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","Maps","_s","isLoaded","id","googleMapsApiKey","map","setMap","useState","navigator","geolocation","getCurrentPosition","position","userLocation","coords","latitude","longitude","prevMap","panTo","error","console","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","center","zoom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/savio/Downloads/final site/bloodlinkFinal - Copy/src/routes/Maps.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '800px', // Increase the width\r\n  height: '600px', // Increase the height\r\n};\r\n\r\nconst defaultCenter = {\r\n  lat: 22.805618,\r\n  lng: 86.203110,\r\n};\r\n\r\nfunction Maps() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyD5SApASJpEqmz_XCbHmcGnY1m_GJdP_Fs\",\r\n  });\r\n\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const userLocation = {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            };\r\n\r\n            setMap((prevMap) => {\r\n              if (prevMap) {\r\n                prevMap.panTo(userLocation);\r\n              }\r\n              return prevMap;\r\n            });\r\n          },\r\n          (error) => {\r\n            console.error('Error getting user location:', error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [isLoaded]);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds(defaultCenter);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback() {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={defaultCenter}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      <></>\r\n    </GoogleMap>\r\n  ) : <></>;\r\n}\r\n\r\nexport default React.memo(Maps);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EAAE;EAChBC,MAAM,EAAE,OAAO,CAAE;AACnB,CAAC;AAED,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAS,CAAC,GAAGb,cAAc,CAAC;IAClCc,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,IAAI,CAAC;EAE1CpB,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,EAAE;MACZ,IAAIM,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;UACZ,MAAMC,YAAY,GAAG;YACnBd,GAAG,EAAEa,QAAQ,CAACE,MAAM,CAACC,QAAQ;YAC7Bf,GAAG,EAAEY,QAAQ,CAACE,MAAM,CAACE;UACvB,CAAC;UAEDT,MAAM,CAAEU,OAAO,IAAK;YAClB,IAAIA,OAAO,EAAE;cACXA,OAAO,CAACC,KAAK,CAACL,YAAY,CAAC;YAC7B;YACA,OAAOI,OAAO;UAChB,CAAC,CAAC;QACJ,CAAC,EACAE,KAAK,IAAK;UACTC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD,CACF,CAAC;MACH;IACF;EACF,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,MAAMkB,MAAM,GAAGlC,KAAK,CAACmC,WAAW,CAAC,SAASC,QAAQA,CAACjB,GAAG,EAAE;IACtD,MAAMkB,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC9B,aAAa,CAAC;IACjEQ,GAAG,CAACuB,SAAS,CAACL,MAAM,CAAC;IACrBjB,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwB,SAAS,GAAG3C,KAAK,CAACmC,WAAW,CAAC,SAASC,QAAQA,CAAA,EAAG;IACtDhB,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOJ,QAAQ,gBACbT,OAAA,CAACL,SAAS;IACR0C,iBAAiB,EAAEpC,cAAe;IAClCqC,MAAM,EAAElC,aAAc;IACtBmC,IAAI,EAAE,EAAG;IACTZ,MAAM,EAAEA,MAAO;IACfS,SAAS,EAAEA,SAAU;IAAAI,QAAA,eAErBxC,OAAA,CAAAF,SAAA,mBAAI;EAAC;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC,gBACV5C,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACX;AAACU,EAAA,CAtDQD,IAAI;EAAA,QACUX,cAAc;AAAA;AAAAiD,EAAA,GAD5BtC,IAAI;AAwDb,eAAAuC,GAAA,gBAAerD,KAAK,CAACsD,IAAI,CAACxC,IAAI,CAAC;AAAC,IAAAsC,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}